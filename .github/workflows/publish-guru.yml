name: publish-guru

permissions:
  contents: read

on:
  release:
    types:
      - published
  workflow_dispatch:
    inputs:
      version:
        description: "Version to deploy"
        required: true
        type: string
      dry_run:
        description: "Dry run"
        required: false
        type: boolean
        default: true

jobs:
  config:
    name: Configure workflow
    runs-on: ubuntu-24.04
    outputs:
      version: ${{ steps.config.outputs.version }}
      dry_run: ${{ steps.config.outputs.dry_run }}
    steps:
      - id: config
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
            echo "dry_run=${{ github.event.inputs.dry_run }}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/cli/v}" >> $GITHUB_OUTPUT
            echo "dry_run=false" >> $GITHUB_OUTPUT
          fi

  update-kubetail:
    name: Update `kubetail` package
    needs: [config]
    runs-on: ubuntu-24.04
    env:
      ARCHIVE_NAME: "kubetail-cli.orig.tar.xz"
    steps:
      - name: Download source bundle
        uses: robinraju/release-downloader@v1.12
        with:
          repository: kubetail-org/kubetail
          tag: ${{ format('cli/v{0}', needs.config.outputs.version) }}
          fileName: ${{ env.ARCHIVE_NAME }}
          out-file-path: "downloads"

      - name: Extract metadata
        id: meta
        working-directory: ./downloads
        run: |
          SIZE=$(stat --format '%s' "$ARCHIVE_NAME")
          BLAKE2B=$(b2sum "$ARCHIVE_NAME" | awk '{print $1}')
          SHA512=$(sha512sum "$ARCHIVE_NAME" | awk '{print $1}')

          echo "size=$SIZE" >> "$GITHUB_OUTPUT"
          echo "blake2b=$BLAKE2B" >> "$GITHUB_OUTPUT"
          echo "sha512=$SHA512" >> "$GITHUB_OUTPUT"

      - name: Load GURU SSH key
        uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: ${{ secrets.GENTOO_SSH_PRIVATE_KEY }}

      - name: Checkout GURU repo
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.GENTOO_SSH_KNOWN_HOSTS }}" > ~/.ssh/known_hosts

          git clone --depth 1 --branch dev --single-branch git@git.gentoo.org:repo/proj/guru.git

      - name: Checkout kubetail repo
        uses: actions/checkout@v5
        with:
          sparse-checkout: .github/ci-config/guru
          sparse-checkout-cone-mode: false
          path: kubetail

      - name: Create ebuild file
        env:
          SRC_DIR: kubetail/.github/ci-config/guru
          DST_DIR: guru/dev-util/kubetail
        run: |
          cp "$SRC_DIR/kubetail.ebuild" "$DST_DIR/kubetail-${{ needs.config.outputs.version}}.ebuild"

      - name: Update Manifest
        working-directory: guru/dev-util/kubetail
        run: |
          echo "DIST kubetail-cli_${{ needs.config.outputs.version }}.orig.tar.xz ${{ steps.meta.outputs.size }} BLAKE2B ${{ steps.meta.outputs.blake2b }} SHA512 ${{ steps.meta.outputs.sha512 }}" >> Manifest

      - name: Debug
        if: ${{ needs.config.outputs.dry_run == 'true' }}
        working-directory: guru/dev-util/kubetail
        run: |
          ls -lah *
          cat kubetail-${{ needs.config.outputs.version }}.ebuild
          cat Manifest

      - name: Push changes to GURU repo
        working-directory: guru
        if: ${{ needs.config.outputs.dry_run != 'true' }}
        run: |
          # Set name and email
          git config user.name "Andres Morey"
          git config user.email "andres@kubetail.com"

          # Stage changes
          git add . --all

          # Commit and push
          git commit -a -s -m "dev-util/kubetail: add ${{ needs.config.outputs.version }}"
          git push origin

  update-kubetail-bin:
    name: Update `kubetail-bin` package
    needs: [config, update-kubetail]
    runs-on: ubuntu-24.04
    steps:
      - name: Download source bundle
        uses: robinraju/release-downloader@v1.12
        with:
          repository: kubetail-org/kubetail
          tag: ${{ format('cli/v{0}', needs.config.outputs.version) }}
          fileName: "kubetail-linux-*.tar.gz"
          out-file-path: "downloads"

      - name: Extract metadata
        id: meta
        working-directory: ./downloads
        run: |
          AMD64_NAME="kubetail-linux-amd64.tar.gz"
          ARM64_NAME="kubetail-linux-arm64.tar.gz"

          AMD64_SIZE=$(stat --format '%s' "$AMD64_NAME")
          AMD64_BLAKE2B=$(b2sum "$AMD64_NAME" | awk '{print $1}')
          AMD64_SHA512=$(sha512sum "$AMD64_NAME" | awk '{print $1}')

          ARM64_SIZE=$(stat --format '%s' "$ARM64_NAME")
          ARM64_BLAKE2B=$(b2sum "$ARM64_NAME" | awk '{print $1}')
          ARM64_SHA512=$(sha512sum "$ARM64_NAME" | awk '{print $1}')

          echo "amd64_size=$AMD64_SIZE" >> "$GITHUB_OUTPUT"
          echo "amd64_blake2b=$AMD64_BLAKE2B" >> "$GITHUB_OUTPUT"
          echo "amd64_sha512=$AMD64_SHA512" >> "$GITHUB_OUTPUT"

          echo "arm64_size=$ARM64_SIZE" >> "$GITHUB_OUTPUT"
          echo "arm64_blake2b=$ARM64_BLAKE2B" >> "$GITHUB_OUTPUT"
          echo "arm64_sha512=$ARM64_SHA512" >> "$GITHUB_OUTPUT"

      - name: Load GURU SSH key
        uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: ${{ secrets.GENTOO_SSH_PRIVATE_KEY }}

      - name: Checkout GURU repo
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.GENTOO_SSH_KNOWN_HOSTS }}" > ~/.ssh/known_hosts

          git clone --depth 1 --branch dev --single-branch git@git.gentoo.org:repo/proj/guru.git

      - name: Checkout kubetail repo
        uses: actions/checkout@v5
        with:
          sparse-checkout: .github/ci-config/guru
          sparse-checkout-cone-mode: false
          path: kubetail

      - name: Create ebuild file
        env:
          SRC_DIR: kubetail/.github/ci-config/guru
          DST_DIR: guru/dev-util/kubetail-bin
        run: |
          cp "$SRC_DIR/kubetail-bin.ebuild" "$DST_DIR/kubetail-bin-${{ needs.config.outputs.version}}.ebuild"

      - name: Update Manifest
        working-directory: guru/dev-util/kubetail-bin
        env:
          P: "kubetail-bin-${{ needs.config.outputs.version }}"
        run: |
          echo "DIST $P-linux-amd64.tar.gz ${{ steps.meta.outputs.amd64_size }} BLAKE2B ${{ steps.meta.outputs.amd64_blake2b }} SHA512 ${{ steps.meta.outputs.amd64_sha512 }}" >> Manifest
          echo "DIST $P-linux-arm64.tar.gz ${{ steps.meta.outputs.arm64_size }} BLAKE2B ${{ steps.meta.outputs.arm64_blake2b }} SHA512 ${{ steps.meta.outputs.arm64_sha512 }}" >> Manifest

      - name: Debug
        if: ${{ needs.config.outputs.dry_run == 'true' }}
        working-directory: guru/dev-util/kubetail-bin
        run: |
          ls -lah *
          cat kubetail-bin-${{ needs.config.outputs.version }}.ebuild
          cat Manifest

      - name: Push changes to GURU repo
        working-directory: guru
        if: ${{ needs.config.outputs.dry_run != 'true' }}
        run: |
          # Set name and email
          git config user.name "Andres Morey"
          git config user.email "andres@kubetail.com"

          # Stage changes
          git add . --all

          # Commit and push
          git commit -a -s -m "dev-util/kubetail-bin: add ${{ needs.config.outputs.version }}"
          git push origin
