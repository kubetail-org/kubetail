# Copyright 2024-2025 Andres Morey
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

FROM rust:1.86.0 AS rustbuilder

WORKDIR /work

# System dependencies
RUN apt-get update && apt-get install -yq patchelf protobuf-compiler

# Install Rust dependencies (for cache)
COPY crates/rgkl/Cargo.toml ./crates/rgkl/Cargo.toml
COPY crates/rgkl/Cargo.lock ./crates/rgkl/Cargo.lock
COPY crates/rgkl/src/main.rs ./crates/rgkl/src/main.rs
RUN cd crates/rgkl && cargo fetch

# Copy code
COPY . .

# Build
RUN cd crates/rgkl && cargo build --release

# Make bundle
RUN \
    ARCH="$(uname -m)" && \
    if [ "$ARCH" = "x86_64" ]; then \
      LIBC_PATH="/lib/x86_64-linux-gnu"; \
      LINKER_PATH="/lib64/ld-linux-x86-64.so.2"; \
    elif [ "$ARCH" = "aarch64" ]; then \
      LIBC_PATH="/lib/aarch64-linux-gnu"; \
      LINKER_PATH="/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1"; \
    else \
      echo "Unsupported architecture: $ARCH"; exit 1; \
    fi && \
    mkdir -p /out/lib && \
    cp -v /work/crates/rgkl/target/release/rgkl /out/rgkl && \
    cp -v $LIBC_PATH/libc.so.6 /out/lib/ && \
    cp -v $LIBC_PATH/libgcc_s.so.1 /out/lib/ && \
    cp -v $LINKER_PATH /out/lib/ld-linux.so

RUN patchelf --set-rpath "\$ORIGIN/lib" /out/rgkl

# -----------------------------------------------------------

FROM golang:1.23.4 AS gobuilder

WORKDIR /work

# install dependencies (for cache)
COPY modules/shared/go.mod ./shared/go.mod
COPY modules/shared/go.sum ./shared/go.sum
COPY modules/cluster-agent/go.mod ./cluster-agent/go.mod
COPY modules/cluster-agent/go.sum ./cluster-agent/go.sum
RUN cd cluster-agent && go mod download all

# copy code
COPY modules/shared ./shared
COPY modules/cluster-agent ./cluster-agent

# build cluster-agent
ENV CGO_ENABLED=0
RUN cd cluster-agent && go build -ldflags="-s -w" -o ../bin/cluster-agent ./cmd/main.go

# -----------------------------------------------------------

FROM scratch AS final

WORKDIR /cluster-agent

COPY --from=rustbuilder /out /rgkl
COPY --from=gobuilder /work/bin/cluster-agent .

ENTRYPOINT ["./cluster-agent"]
CMD []
