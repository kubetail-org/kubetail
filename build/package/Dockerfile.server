# Copyright 2024 Andres Morey
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# -----------------------------------------------------------

FROM node:22.11.0-alpine3.20 AS frontend-builder
WORKDIR /dashboard-ui

# enable pnpm
RUN corepack enable
RUN corepack prepare pnpm@latest --activate

# set up git+ssh for private package download from github
#RUN apk add git openssh-client
#RUN mkdir -p -m 0700 ~/.ssh && ssh-keyscan github.com >> ~/.ssh/known_hosts

# fetch dependencies
COPY dashboard-ui/package.json ./
COPY dashboard-ui/pnpm-lock.yaml ./
RUN pnpm install

# copy code
COPY dashboard-ui/ .

# build
RUN pnpm build

ENTRYPOINT []
CMD []

# -----------------------------------------------------------
  
FROM golang:1.22.7 AS server-builder

WORKDIR /work

# install dependencies (for cache)
COPY modules/common/go.mod ./common/go.mod
COPY modules/common/go.sum ./common/go.sum
COPY modules/server/go.mod ./server/go.mod
COPY modules/server/go.sum ./server/go.sum
RUN cd server && go mod download all

# copy code
COPY modules/common ./common
COPY modules/server ./server

# copy frontend
COPY --from=frontend-builder /dashboard-ui/dist ./server/website

# build server
RUN cd server && CGO_ENABLED=0 go build -o ../bin/server ./cmd/main.go

ENTRYPOINT ["./server"]
CMD []

# -----------------------------------------------------------

FROM alpine:3.20.0 AS debug

WORKDIR /server

# copy certs for tls verification
COPY --from=server-builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/

# copy server
COPY --from=server-builder /work/bin/server /server/server

ENTRYPOINT ["./server"]
CMD []

# -----------------------------------------------------------

FROM scratch AS final

WORKDIR /server

# copy certs for tls verification
COPY --from=server-builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/

# copy server
COPY --from=server-builder /work/bin/server /server/server

ENTRYPOINT ["./server"]
CMD []
