kind: ConfigMap
apiVersion: v1
metadata:
  name: kubetail
  namespace: default
  labels:
    app.kubernetes.io/name: kubetail
data:
  config.yaml: |
    auth-mode: cluster
    allowed-namespaces: []
    server:
      addr: :4000
      gin-mode: debug
      base-path: /
      session:
        secret: REPLACEME
        cookie:
          name: session
          path: /
          max-age: 2592000
          secure: false
          http-only: true
          same-site: lax
      csrf:
        enabled: true
        secret: REPLACEME
        field-name: csrf_token
        cookie:
          name: csrf
          path: /
          max-age: 43200
          secure: false
          http-only: true
          same-site: strict
      logging:
        enabled: true
        level: debug
        format: pretty
        access-log:
          enabled: true
          hide-health-checks: false
      tls:
        enabled: false
        cert-file:
        key-file:
    agent:
      addr: :50051
      logging:
        enabled: true
        level: debug
        format: pretty
---
kind: ServiceAccount
apiVersion: v1
automountServiceAccountToken: true
metadata:
  name: kubetail-server
  namespace: default
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: server
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubetail-server
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: server
rules:
- apiGroups: ["", apps, batch]
  resources: [cronjobs, daemonsets, deployments, jobs, namespaces, nodes, pods, pods/log, replicasets, statefulsets]
  verbs: [get, list, watch]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubetail-server
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubetail-server
subjects:
- kind: ServiceAccount
  name: kubetail-server
  namespace: default
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubetail-server
  namespace: default
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: server
rules:
- apiGroups: [discovery.k8s.io]
  resources: [endpointslices]
  verbs: [list, watch]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubetail-server
  namespace: default
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: server
roleRef:
  kind: Role
  name: kubetail-server
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: kubetail-server
    namespace: default
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: kubetail-server
  namespace: default
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: server
spec:
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app.kubernetes.io/name: kubetail
      app.kubernetes.io/component: server
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubetail
        app.kubernetes.io/component: server
    spec:
      automountServiceAccountToken: true
      serviceAccountName: kubetail-server
      containers:
      - name: kubetail-server
        image: kubetail-server
        ports:
        - name: http
          protocol: TCP
          containerPort: 4000
        args:
        - --config=/etc/kubetail/config.yaml
        volumeMounts:
        - name: config
          mountPath: /etc/kubetail
          readOnly: true
        resources: {}
      volumes:
      - name: config
        configMap:
          name: kubetail
---
kind: ServiceAccount
apiVersion: v1
automountServiceAccountToken: true
metadata:
  name: kubetail-agent
  namespace: default
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: agent
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubetail-agent
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: agent
rules:
- apiGroups: [""]
  resources: [pods/log]
  verbs: [list, watch]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubetail-agent
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: agent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubetail-agent
subjects:
- kind: ServiceAccount
  name: kubetail-agent
  namespace: default
---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: kubetail-agent
  namespace: default
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: agent
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: kubetail
      app.kubernetes.io/component: agent
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubetail
        app.kubernetes.io/component: agent
    spec:
      serviceAccountName: kubetail-agent
      containers:
      - name: kubetail-agent
        image: kubetail-agent
        ports:
        - name: grpc
          protocol: TCP
          containerPort: 50051
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        args:
        - --config=/etc/kubetail/config.yaml
        volumeMounts:
        - name: config
          mountPath: /etc/kubetail
          readOnly: true
        - name: varlog
          mountPath: /var/log
        resources: {}
      volumes:
      - name: config
        configMap:
          name: kubetail
      - name: varlog
        hostPath:
          path: /var/log
---
kind: Service
apiVersion: v1
metadata:
  name: kubetail-agent
  namespace: default
spec:
  clusterIP: None
  selector:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: agent
---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: kubetail-agent
  namespace: default
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: kubetail
      app.kubernetes.io/component: agent
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: kubetail
          app.kubernetes.io/component: server
