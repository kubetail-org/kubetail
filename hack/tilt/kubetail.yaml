kind: ConfigMap
apiVersion: v1
metadata:
  name: kubetail-dashboard
  namespace: kubetail-system
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: dashboard
data:
  config.yaml: |
    dashboard:
      addr: :8080
      auth-mode: auto
      base-path: /
      cluster-api-endpoint: http://kubetail-cluster-api.kubetail-system.svc:8080
      environment: cluster
      gin-mode: debug
      ui:
        cluster-api-enabled: true
      session:
        secret: REPLACEME
        cookie:
          name: kubetail_dashboard_session
          path: /
          max-age: 2592000
          secure: false
          http-only: true
          same-site: lax
      csrf:
        enabled: true
      logging:
        enabled: true
        level: debug
        format: pretty
        access-log:
          enabled: true
          hide-health-checks: true
      tls: 
        enabled: false
        cert-file:
        key-file:
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: kubetail-cluster-api
  namespace: kubetail-system
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: cluster-api
data:
  config.yaml: |
    cluster-api:
      addr: :8080
      base-path: /
      gin-mode: debug
      cluster-agent:
        dispatch-url: kubernetes://kubetail-cluster-agent:50051
        tls:
          enabled: true
          cert-file: /etc/kubetail/tls.crt
          key-file: /etc/kubetail/tls.key
          ca-file: /etc/kubetail/ca.crt
          server-name: kubetail-cluster-agent.kubetail-system.svc
      csrf:
        enabled: true
      logging:
        enabled: true
        level: debug
        format: pretty
        access-log:
          enabled: true
          hide-health-checks: true
      tls: 
        enabled: false
        cert-file:
        key-file:
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: kubetail-cluster-agent
  namespace: kubetail-system
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: cluster-agent
data:
  config.yaml: |
    cluster-agent:
      addr: :50051
      logging:
        enabled: true
        level: debug
        format: pretty
      tls:
        enabled: true
        cert-file: /etc/kubetail/tls.crt
        key-file: /etc/kubetail/tls.key
        ca-file: /etc/kubetail/ca.crt
        client-auth: require-and-verify
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: kubetail-dashboard
  namespace: kubetail-system
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: dashboard
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubetail-dashboard
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: dashboard
rules:
  - apiGroups: [""]
    resources: [namespaces, nodes]
    verbs: [get, list, watch]
  - apiGroups: ["", apps, batch]
    resources:
      - cronjobs
      - daemonsets
      - deployments
      - jobs
      - pods
      - pods/log
      - replicasets
      - statefulsets
    verbs: [get, list, watch]
  - apiGroups: [authentication.k8s.io]
    resources: [tokenreviews]
    verbs: [create]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubetail-dashboard
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: dashboard
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubetail-dashboard
subjects:
  - kind: ServiceAccount
    name: kubetail-dashboard
    namespace: kubetail-system
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubetail-dashboard
  namespace: kubetail-system
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: dashboard
rules:
  - apiGroups: [discovery.k8s.io]
    resources: [endpointslices]
    verbs: [list, watch]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubetail-dashboard
  namespace: kubetail-system
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: dashboard
roleRef:
  kind: Role
  name: kubetail-dashboard
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: kubetail-dashboard
    namespace: kubetail-system
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: kubetail-dashboard
  namespace: kubetail-system
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: dashboard
spec:
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app.kubernetes.io/name: kubetail
      app.kubernetes.io/component: dashboard
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubetail
        app.kubernetes.io/component: dashboard
    spec:
      serviceAccountName: kubetail-dashboard
      containers:
        - name: kubetail-dashboard
          image: kubetail-dashboard
          ports:
            - name: http
              protocol: TCP
              containerPort: 8080
          args:
            - --config=/etc/kubetail/config.yaml
          volumeMounts:
            - name: config
              mountPath: /etc/kubetail
              readOnly: true
            - name: tls
              mountPath: /etc/tls
              readOnly: true
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /healthz
              port: http
            initialDelaySeconds: 10
            timeoutSeconds: 30
            periodSeconds: 5
            failureThreshold: 3
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /healthz
              port: http
            initialDelaySeconds: 10
            timeoutSeconds: 30
            periodSeconds: 5
            failureThreshold: 3
          resources: {}
      volumes:
        - name: config
          configMap:
            name: kubetail-dashboard
        - name: tls
          secret:
            secretName: kubetail-dashboard-tls
---
kind: Service
apiVersion: v1
metadata:
  name: kubetail-dashboard
  namespace: kubetail-system
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: dashboard
spec:
  selector:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: dashboard
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: http
      appProtocol: http
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: kubetail-cluster-api
  namespace: kubetail-system
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: cluster-api
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubetail-cluster-api
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: cli
rules:
  - apiGroups: [""]
    resources: [nodes]
    verbs: [get, list, watch]
  - apiGroups: ["", apps, batch]
    resources:
      - cronjobs
      - daemonsets
      - deployments
      - jobs
      - pods
      - replicasets
      - statefulsets
    verbs: [get, list, watch]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubetail-cluster-api
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: cli
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubetail-cluster-api
subjects:
  - kind: ServiceAccount
    name: kubetail-cluster-api
    namespace: kubetail-system
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubetail-cluster-api
  namespace: kubetail-system
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: cluster-api
rules:
  - apiGroups: [discovery.k8s.io]
    resources: [endpointslices]
    verbs: [list, watch]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubetail-cluster-api
  namespace: kubetail-system
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: cluster-api
roleRef:
  kind: Role
  name: kubetail-cluster-api
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: kubetail-cluster-api
    namespace: kubetail-system
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: kubetail-cluster-api
  namespace: kubetail-system
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: cluster-api
spec:
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app.kubernetes.io/name: kubetail
      app.kubernetes.io/component: cluster-api
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubetail
        app.kubernetes.io/component: cluster-api
    spec:
      serviceAccountName: kubetail-cluster-api
      containers:
        - name: kubetail-cluster-api
          image: kubetail-cluster-api
          ports:
            - name: http
              protocol: TCP
              containerPort: 8080
          args:
            - --config=/etc/kubetail/config.yaml
          volumeMounts:
            - name: config
              mountPath: /etc/kubetail
              readOnly: true
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /healthz
              port: http
            initialDelaySeconds: 10
            timeoutSeconds: 30
            periodSeconds: 5
            failureThreshold: 3
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /healthz
              port: http
            initialDelaySeconds: 10
            timeoutSeconds: 30
            periodSeconds: 5
            failureThreshold: 3
          resources: {}
      volumes:
        - name: config
          projected:
            sources:
              - configMap:
                  name: kubetail-cluster-api
              - secret:
                  name: kubetail-cluster-api-tls
              - secret:
                  name: kubetail-ca
---
kind: Service
apiVersion: v1
metadata:
  name: kubetail-cluster-api
  namespace: kubetail-system
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: cluster-api
spec:
  selector:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: cluster-api
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: http
      appProtocol: http
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: kubetail-cluster-agent
  namespace: kubetail-system
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: cluster-agent
---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: kubetail-cluster-agent
  namespace: kubetail-system
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: cluster-agent
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: kubetail
      app.kubernetes.io/component: cluster-agent
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubetail
        app.kubernetes.io/component: cluster-agent
    spec:
      serviceAccountName: kubetail-cluster-agent
      containers:
        - name: kubetail-cluster-agent
          image: kubetail-cluster-agent
          ports:
            - name: grpc
              protocol: TCP
              containerPort: 50051
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          args:
            - --config=/etc/kubetail/config.yaml
          volumeMounts:
            - name: config
              mountPath: /etc/kubetail
              readOnly: true
            - name: varlog
              mountPath: /var/log
              readOnly: true
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
          readinessProbe:
            exec:
              command:
                - /bin/grpc_health_probe
                - -addr=:50051
                - -tls
                - -tls-ca-cert=/etc/kubetail/ca.crt
                - -tls-server-name=kubetail-cluster-agent.kubetail-system.svc
                - -tls-client-cert=/etc/kubetail/tls.crt
                - -tls-client-key=/etc/kubetail/tls.key
            initialDelaySeconds: 10
            timeoutSeconds: 30
            periodSeconds: 5
            failureThreshold: 3
          livenessProbe:
            exec:
              command:
                - /bin/grpc_health_probe
                - -addr=:50051
                - -tls
                - -tls-ca-cert=/etc/kubetail/ca.crt
                - -tls-server-name=kubetail-cluster-agent.kubetail-system.svc
                - -tls-client-cert=/etc/kubetail/tls.crt
                - -tls-client-key=/etc/kubetail/tls.key
            initialDelaySeconds: 10
            timeoutSeconds: 30
            periodSeconds: 5
            failureThreshold: 3
          resources: {}
      volumes:
        - name: config
          projected:
            sources:
              - configMap:
                  name: kubetail-cluster-agent
              - secret:
                  name: kubetail-cluster-agent-tls
              - secret:
                  name: kubetail-ca
        - name: varlog
          hostPath:
            path: /var/log
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
---
kind: Service
apiVersion: v1
metadata:
  name: kubetail-cluster-agent
  namespace: kubetail-system
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: cluster-agent
spec:
  clusterIP: None
  selector:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: cluster-agent
---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: kubetail-cluster-agent
  namespace: kubetail-system
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: cluster-agent
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: kubetail
      app.kubernetes.io/component: cluster-agent
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: kubetail
              app.kubernetes.io/component: cluster-api
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: kubetail-cli
  namespace: kubetail-system
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: cli
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubetail-cli
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: cli
rules:
  - apiGroups: [""]
    resources: [nodes]
    verbs: [get, list, watch]
  - apiGroups: ["", apps, batch]
    resources:
      - cronjobs
      - daemonsets
      - deployments
      - jobs
      - pods
      - replicasets
      - statefulsets
    verbs: [get, list, watch]
  - apiGroups: [""]
    resources: [pods/log]
    verbs: [list, watch]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubetail-cli
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: cli
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubetail-cli
subjects:
  - kind: ServiceAccount
    name: kubetail-cli
    namespace: kubetail-system
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: kubetail-testuser
  namespace: default
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubetail-testuser
rules:
  - apiGroups: ["", apps, batch]
    resources:
      - cronjobs
      - daemonsets
      - deployments
      - jobs
      - namespaces
      - nodes
      - pods
      - pods/log
      - replicasets
      - statefulsets
    verbs: [get, list, watch]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubetail-testuser
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubetail-testuser
subjects:
  - kind: ServiceAccount
    name: kubetail-testuser
    namespace: default
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubetail-testuser
  namespace: kubetail-system
rules:
  - apiGroups: [discovery.k8s.io]
    resources: [endpointslices]
    verbs: [list, watch]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubetail-testuser
  namespace: kubetail-system
roleRef:
  kind: Role
  name: kubetail-testuser
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: kubetail-testuser
    namespace: default
